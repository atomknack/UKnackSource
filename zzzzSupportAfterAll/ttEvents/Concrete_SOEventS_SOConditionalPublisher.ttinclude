
using System;
using UnityEngine;
using UKnack.Attributes;
using UKnack.Values;

using static UnityEngine.InputSystem.InputAction;

namespace UKnack.Concrete.Events
{
    /// This class not intended to be used in code, but only made for ease of creation scriptable object in Unity Editor
    [CreateAssetMenu(fileName = "ConditionalPublisherToSOEvent_<#=underscore#> ", menuName = "UKnack/ConditionalPublishers/To <#=underscore#>")]
    public sealed class <#=classname#> : SOPublisher_Concrete_<#=underscore#>
    {
            [Tooltip("This publisher will publish only when this value is true, if value is false publish call will be silently ignored")]
            [SerializeField] 
            [ValidReference(typeof(IValue<bool>), nameof(IValue<bool>.Validate))] 
           private SOValue<bool> publishWhenTrue;
            public override void Publish(<#=concrete.GenericArgumentsDeclaration()#>)
            {
               IValue<bool>.Validate(publishWhenTrue);
               if (publishWhenTrue.GetValue() == false)
                   return;
              base.Publish(<#=concrete.publishArguments#>);
            }
    }
}